/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nuggets_apnea;
import java.util.ArrayList;
import org.jfree.ui.RefineryUtilities;
/**
 *
 * @author seabirds
 */
public class NuggetScore2 extends javax.swing.JFrame {

    /**
     * Creates new form NuggetScore2
     */
    MainFrame1 mf;
    NDataFrame nf;
    double scrBP[][];
    double scrBM[][];
    ArrayList List1=new ArrayList();
    ArrayList List2=new ArrayList();
    public NuggetScore2(MainFrame1 me,NDataFrame ne) 
    {
        initComponents();
        mf=me;
        nf=ne;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 250, 250));

        jLabel1.setFont(new java.awt.Font("Century Schoolbook", 0, 24)); // NOI18N
        jLabel1.setText("Nugget Score Using Rotation Test");

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 0, 15)); // NOI18N
        jLabel3.setText("CRscore");

        jLabel4.setFont(new java.awt.Font("Century Schoolbook", 0, 15)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 0, 15)); // NOI18N
        jLabel2.setText("Score Array");

        jTextArea1.setColumns(15);
        jTextArea1.setFont(new java.awt.Font("Century Schoolbook", 0, 15)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Century Schoolbook", 0, 15)); // NOI18N
        jButton1.setText("FindBoundary");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jButton1)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            String cls1=mf.clsFeat.get(0).toString();
            String cls2=mf.clsFeat.get(1).toString();
             
           
            for(int i=0;i<mf.cls.length;i++)
            {
                if(cls1.equals(mf.cls[i]))
                {
                    List1.add(i);
                }
                else
                {
                    List2.add(i);
                }
            }
            scrBP=new double[List1.size()][2];
            scrBM=new double[List2.size()][2];
            
            for(int i1=0;i1<List1.size();i1++)
            {
                int k1=Integer.parseInt(List1.get(i1).toString());
                double at1[][]=new double[List2.size()][2];
                int k=0;
                for(int i2=0;i2<List2.size();i2++)
                {
                    int k2=Integer.parseInt(List2.get(i2).toString());    
                    double e1=0;
                    for(int j=0;j<mf.val[0].length;j++)
                    {
                        double d1=Double.parseDouble(mf.val[k1][j])-Double.parseDouble(mf.val[k2][j]);
                        e1=e1+(d1*d1);
                    }     
                    e1=Math.sqrt(e1);
                    //System.out.println("k1 "+k1+ "  : "+k2+" : "+e1);
                    at1[k][0]=k2;
                    at1[k][1]=e1;
                    k++;
                }
                
                for(int i=0;i<k;i++)
                {
                    for(int j=i+1;j<k;j++)
                    {
                        if(at1[i][1]>at1[j][1])
                        {
                            double t1=at1[i][0];
                            at1[i][0]=at1[j][0];
                            at1[j][0]=t1;
                            
                            double t2=at1[i][1];
                            at1[i][1]=at1[j][1];
                            at1[j][1]=t2;
                        }
                            
                    }
                }
                double sc1=0;
                for(int i=0;i<5;i++)
                {
                    //System.out.println(at1[i][1]);
                    sc1=sc1+at1[i][1];
                }
                sc1=sc1/5;
                System.out.println("Si --- "+sc1);
                scrBP[i1][0]=k1;
                scrBP[i1][1]=sc1;
            }
            
            for(int i=0;i<scrBP.length;i++)
            {
                for(int j=i+1;j<scrBP.length;j++)
                {
                    if(scrBP[i][1]>scrBP[j][1])
                    {
                        double t1=scrBP[i][0];
                        scrBP[i][0]=scrBP[j][0];
                        scrBP[j][0]=t1;
                           
                        double t2=scrBP[i][1];
                        scrBP[i][1]=scrBP[j][1];
                        scrBP[j][1]=t2;
                    }
                            
                 }
             }
             
            for(int i=0;i<scrBP.length;i++)
            {
                System.out.println("series1.add("+scrBP[i][0]+","+scrBP[i][1]+");");
            }
            
            BoundaryGraph bg1 = new BoundaryGraph("Boundary Graph B+",scrBP,"B+");
            bg1.pack();
            RefineryUtilities.centerFrameOnScreen(bg1);
            bg1.setVisible(true);
            
            
            for(int i1=0;i1<List2.size();i1++)
            {
                int k1=Integer.parseInt(List2.get(i1).toString());
                double at1[][]=new double[List1.size()][2];
                int k=0;
                for(int i2=0;i2<List1.size();i2++)
                {
                    int k2=Integer.parseInt(List1.get(i2).toString());    
                    double e1=0;
                    for(int j=0;j<mf.val[0].length;j++)
                    {
                        double d1=Double.parseDouble(mf.val[k1][j])-Double.parseDouble(mf.val[k2][j]);
                        e1=e1+(d1*d1);
                    }     
                    e1=Math.sqrt(e1);
                    //System.out.println("k1 "+k1+ "  : "+k2+" : "+e1);
                    at1[k][0]=k2;
                    at1[k][1]=e1;
                    k++;
                }
                
                for(int i=0;i<k;i++)
                {
                    for(int j=i+1;j<k;j++)
                    {
                        if(at1[i][1]>at1[j][1])
                        {
                            double t1=at1[i][0];
                            at1[i][0]=at1[j][0];
                            at1[j][0]=t1;
                            
                            double t2=at1[i][1];
                            at1[i][1]=at1[j][1];
                            at1[j][1]=t2;
                        }
                            
                    }
                }
                double sc1=0;
                for(int i=0;i<5;i++)
                {
                    //System.out.println(at1[i][1]);
                    sc1=sc1+at1[i][1];
                }
                sc1=sc1/5;
                System.out.println("Si --- "+sc1);
                scrBM[i1][0]=k1;
                scrBM[i1][1]=sc1;
            }
            
            for(int i=0;i<scrBM.length;i++)
            {
                for(int j=i+1;j<scrBM.length;j++)
                {
                    if(scrBM[i][1]>scrBM[j][1])
                    {
                        double t1=scrBM[i][0];
                        scrBM[i][0]=scrBM[j][0];
                        scrBM[j][0]=t1;
                           
                        double t2=scrBM[i][1];
                        scrBM[i][1]=scrBM[j][1];
                        scrBM[j][1]=t2;
                    }
                            
                 }
             }
             
            for(int i=0;i<scrBM.length;i++)
            {
                System.out.println("series1.add("+scrBM[i][0]+","+scrBM[i][1]+");");
            }
            BoundaryGraph bg2 = new BoundaryGraph("Boundary Graph B-",scrBM,"B-");
            bg2.pack();
            RefineryUtilities.centerFrameOnScreen(bg2);
            bg2.setVisible(true);
            
            
            CNFrame cf=new CNFrame(mf,nf,this);
            cf.setVisible(true);
            cf.setResizable(false);
            cf.setTitle("Find Critical Nugget");
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuggetScore2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuggetScore2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuggetScore2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuggetScore2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new NuggetScore2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
